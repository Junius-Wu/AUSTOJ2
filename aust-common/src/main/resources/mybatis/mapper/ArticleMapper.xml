<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.aust.common.mapper.ArticleMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.aust.common.entity.Article" >
      <id property="id" column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <result property="title" column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result property="userId" column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <result property="keyword" column="keyword" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result property="catelogId" column="catelog_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <result property="totop" column="totop" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <result property="isshow" column="isshow" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <result property="viewcount" column="viewcount" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <result property="likecount" column="likecount" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <result property="createdate" column="createdate" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <result property="modifydate" column="modifydate" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <result property="summary" column="summary" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
  </resultMap>

  <resultMap id="ResultMapWithBLOBs" type="cn.edu.aust.common.entity.ArticleBLOBs" >
    <id property="id" column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result property="title" column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result property="userId" column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result property="keyword" column="keyword" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result property="catelogId" column="catelog_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result property="totop" column="totop" jdbcType="TINYINT" javaType="java.lang.Byte" />
    <result property="isshow" column="isshow" jdbcType="TINYINT" javaType="java.lang.Byte" />
    <result property="viewcount" column="viewcount" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result property="likecount" column="likecount" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result property="createdate" column="createdate" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    <result property="modifydate" column="modifydate" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    <result property="summary" column="summary" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    <result property="content" column="content" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, title, user_id, keyword, viewcount, likecount, catelog_id, totop, isshow, createdate,
    modifydate,summary
  </sql>
  <sql id="Blob_Column_List" >
     content
  </sql>

  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="cn.edu.aust.common.entity.ArticleBLOBs" >
    insert into article (id, title, user_id,
      keyword, viewcount, likecount,
      catelog_id, totop, isshow,
      createdate, modifydate, summary,
      content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER},
      #{keyword,jdbcType=VARCHAR}, #{viewcount,jdbcType=INTEGER}, #{likecount,jdbcType=INTEGER},
      #{catelogId,jdbcType=INTEGER}, #{totop,jdbcType=TINYINT}, #{isshow,jdbcType=TINYINT},
      #{createdate,jdbcType=TIMESTAMP}, #{modifydate,jdbcType=TIMESTAMP}, #{summary,jdbcType=LONGVARCHAR},
      #{content,jdbcType=LONGVARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="cn.edu.aust.common.entity.ArticleBLOBs" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="keyword != null" >
        keyword,
      </if>
      <if test="viewcount != null" >
        viewcount,
      </if>
      <if test="likecount != null" >
        likecount,
      </if>
      <if test="catelogId != null" >
        catelog_id,
      </if>
      <if test="totop != null" >
        totop,
      </if>
      <if test="isshow != null" >
        isshow,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
      <if test="modifydate != null" >
        modifydate,
      </if>
      <if test="summary != null" >
        summary,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="keyword != null" >
        #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="viewcount != null" >
        #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="likecount != null" >
        #{likecount,jdbcType=INTEGER},
      </if>
      <if test="catelogId != null" >
        #{catelogId,jdbcType=INTEGER},
      </if>
      <if test="totop != null" >
        #{totop,jdbcType=TINYINT},
      </if>
      <if test="isshow != null" >
        #{isshow,jdbcType=TINYINT},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifydate != null" >
        #{modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.aust.common.entity.ArticleBLOBs" >
    update article
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="keyword != null" >
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="viewcount != null" >
        viewcount = #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="likecount != null" >
        likecount = #{likecount,jdbcType=INTEGER},
      </if>
      <if test="catelogId != null" >
        catelog_id = #{catelogId,jdbcType=INTEGER},
      </if>
      <if test="totop != null" >
        totop = #{totop,jdbcType=TINYINT},
      </if>
      <if test="isshow != null" >
        isshow = #{isshow,jdbcType=TINYINT},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifydate != null" >
        modifydate = #{modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="summary != null" >
        summary = #{summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.aust.common.entity.ArticleBLOBs" >
    update article
    set title = #{title,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      keyword = #{keyword,jdbcType=VARCHAR},
      viewcount = #{viewcount,jdbcType=INTEGER},
      likecount = #{likecount,jdbcType=INTEGER},
      catelog_id = #{catelogId,jdbcType=INTEGER},
      totop = #{totop,jdbcType=TINYINT},
      isshow = #{isshow,jdbcType=TINYINT},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      modifydate = #{modifydate,jdbcType=TIMESTAMP},
      summary = #{summary,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="cn.edu.aust.common.entity.Article" >
    update article
    set title = #{title,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      keyword = #{keyword,jdbcType=VARCHAR},
      viewcount = #{viewcount,jdbcType=INTEGER},
      likecount = #{likecount,jdbcType=INTEGER},
      catelog_id = #{catelogId,jdbcType=INTEGER},
      totop = #{totop,jdbcType=TINYINT},
      isshow = #{isshow,jdbcType=TINYINT},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      modifydate = #{modifydate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--查找出文章列表,侧边栏显示-->
  <select id="selectList" parameterType="int" resultType="cn.edu.aust.common.entity.Article">
    SELECT id, title, user_id, keyword, viewcount, likecount, catelog_id, totop, isshow
    FROM article ORDER by createdate DESC
    <if test="value > 0">
      limit ${value}
    </if>
  </select>


  <!--关联User的Map查询详细字段-->
  <resultMap id="articleUser" type="cn.edu.aust.common.entity.pojo.ArticleUser" extends="BaseResultMap">
    <association property="user" column="user_id" select="cn.edu.aust.common.mapper.UserMapper.selectBaseByPk"/>
  </resultMap>

  <resultMap id="articleBlobsUser" type="cn.edu.aust.common.entity.pojo.ArticleUser" extends="ResultMapWithBLOBs">
    <association property="user" column="user_id" select="cn.edu.aust.common.mapper.UserMapper.selectBaseByPk"/>
  </resultMap>


  <!--查找文章列表,文章页面显示,返回基础字段-->
  <select id="selectAll" resultMap="articleUser">
    SELECT t1.*,isvote FROM article t1
    LEFT JOIN (select status as isvote,other_id FROM votelog WHERE type = 2 AND user_id = #{curentUser}) as vote ON vote.other_id = t1.id
    WHERE isshow=1
    <if test="search!= null">
      and (t1.id LIKE #{search} or t1.title LIKE #{search} or t1.keyword LIKE #{search})
    </if>
     ORDER BY totop DESC
  </select>
  <!--查询单篇文章-->
  <select id="selectByPk" resultMap="articleBlobsUser">
    SELECT t1.*,isvote FROM article t1
    LEFT JOIN (select status as isvote,other_id FROM votelog WHERE type = 2 AND user_id = #{curentUser}) as vote ON vote.other_id = t1.id
    WHERE isshow=1 and t1.id=#{articleId}
  </select>


</mapper>