<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.aust.common.mapper.ProblemMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.aust.common.entity.Problem" >
      <id column="id" jdbcType="INTEGER" javaType="java.lang.Integer" property="id"/>
      <result column="title" jdbcType="VARCHAR" javaType="java.lang.String" property="title"/>
      <result column="keyword" jdbcType="VARCHAR" javaType="java.lang.String" property="keyword"/>
      <result column="catelog" jdbcType="TINYINT" javaType="java.lang.Byte" property="catelog"/>
      <result column="stage" jdbcType="TINYINT" javaType="java.lang.Byte" property="stage"/>
      <result column="spj" jdbcType="TINYINT" javaType="java.lang.Byte" property="spj"/>
      <result column="time_limit" jdbcType="INTEGER" javaType="java.lang.Integer" property="timeLimit"/>
      <result column="memory_limit" jdbcType="INTEGER" javaType="java.lang.Integer" property="memoryLimit"/>
      <result column="difficulty" jdbcType="TINYINT" javaType="java.lang.Byte" property="difficulty"/>
      <result column="accepted" jdbcType="INTEGER" javaType="java.lang.Integer" property="accepted"/>
      <result column="solved" jdbcType="INTEGER" javaType="java.lang.Integer" property="solved"/>
      <result column="submit" jdbcType="INTEGER" javaType="java.lang.Integer" property="submit"/>
      <result column="submit_user" jdbcType="INTEGER" javaType="java.lang.Integer" property="submitUser"/>
      <result column="author_id" jdbcType="INTEGER" javaType="java.lang.Integer" property="authorId"/>
      <result column="contest_id" jdbcType="INTEGER" javaType="java.lang.Integer" property="contestId"/>
      <result column="createdate" jdbcType="TIMESTAMP" javaType="java.util.Date" property="createdate"/>
      <result column="modifydate" jdbcType="TIMESTAMP" javaType="java.util.Date" property="modifydate"/>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.edu.aust.common.entity.ProblemWithBLOBs" >
      <id column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="title" jdbcType="VARCHAR" javaType="java.lang.String" property="title"/>
    <result column="keyword" jdbcType="VARCHAR" javaType="java.lang.String" property="keyword"/>
    <result column="catelog" jdbcType="TINYINT" javaType="java.lang.Byte" property="catelog"/>
    <result column="stage" jdbcType="TINYINT" javaType="java.lang.Byte" property="stage"/>
    <result column="spj" jdbcType="TINYINT" javaType="java.lang.Byte" property="spj"/>
    <result column="time_limit" jdbcType="INTEGER" javaType="java.lang.Integer" property="timeLimit"/>
    <result column="memory_limit" jdbcType="INTEGER" javaType="java.lang.Integer" property="memoryLimit"/>
    <result column="difficulty" jdbcType="TINYINT" javaType="java.lang.Byte" property="difficulty"/>
    <result column="accepted" jdbcType="INTEGER" javaType="java.lang.Integer" property="accepted"/>
    <result column="solved" jdbcType="INTEGER" javaType="java.lang.Integer" property="solved"/>
    <result column="submit" jdbcType="INTEGER" javaType="java.lang.Integer" property="submit"/>
    <result column="submit_user" jdbcType="INTEGER" javaType="java.lang.Integer" property="submitUser"/>
    <result column="author_id" jdbcType="INTEGER" javaType="java.lang.Integer" property="authorId"/>
    <result column="contest_id" jdbcType="INTEGER" javaType="java.lang.Integer" property="contestId"/>
    <result column="createdate" jdbcType="TIMESTAMP" javaType="java.util.Date" property="createdate"/>
    <result column="modifydate" jdbcType="TIMESTAMP" javaType="java.util.Date" property="modifydate"/>
    <result column="description" jdbcType="LONGVARCHAR" javaType="java.lang.String" property="description"/>
    <result column="input" jdbcType="LONGVARCHAR" javaType="java.lang.String" property="input"/>
    <result column="output" jdbcType="LONGVARCHAR" javaType="java.lang.String" property="output"/>
    <result column="sample_input" jdbcType="LONGVARCHAR" javaType="java.lang.String" property="sampleInput"/>
    <result column="sample_output" jdbcType="LONGVARCHAR" javaType="java.lang.String" property="sampleOutput"/>
    <result column="hit" jdbcType="LONGVARCHAR" javaType="java.lang.String" property="hit"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, keyword, catelog, stage, spj, time_limit, memory_limit, difficulty, accepted,
    solved, submit, submit_user, author_id, contest_id, createdate, modifydate
  </sql>
  <sql id="Blob_Column_List" >
    description, input, output, sample_input, sample_output, hit
  </sql>

  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from problem
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from problem
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.aust.common.entity.ProblemWithBLOBs" >
    insert into problem (id, title, keyword,
    catelog, stage, spj,
    time_limit, memory_limit, difficulty,
    accepted, solved, submit,
    submit_user, author_id, contest_id,
    createdate, modifydate, description,
    input, output, sample_input,
    sample_output, hit)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{keyword,jdbcType=VARCHAR},
    #{catelog,jdbcType=TINYINT}, #{stage,jdbcType=TINYINT}, #{spj,jdbcType=TINYINT},
    #{timeLimit,jdbcType=INTEGER}, #{memoryLimit,jdbcType=INTEGER}, #{difficulty,jdbcType=TINYINT},
    #{accepted,jdbcType=INTEGER}, #{solved,jdbcType=INTEGER}, #{submit,jdbcType=INTEGER},
    #{submitUser,jdbcType=INTEGER}, #{authorId,jdbcType=INTEGER}, #{contestId,jdbcType=INTEGER},
    #{createdate,jdbcType=TIMESTAMP}, #{modifydate,jdbcType=TIMESTAMP}, #{description,jdbcType=LONGVARCHAR},
    #{input,jdbcType=LONGVARCHAR}, #{output,jdbcType=LONGVARCHAR}, #{sampleInput,jdbcType=LONGVARCHAR},
    #{sampleOutput,jdbcType=LONGVARCHAR}, #{hit,jdbcType=LONGVARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="cn.edu.aust.common.entity.ProblemWithBLOBs" >
    insert into problem
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="keyword != null" >
        keyword,
      </if>
      <if test="catelog != null" >
        catelog,
      </if>
      <if test="stage != null" >
        stage,
      </if>
      <if test="spj != null" >
        spj,
      </if>
      <if test="timeLimit != null" >
        time_limit,
      </if>
      <if test="memoryLimit != null" >
        memory_limit,
      </if>
      <if test="difficulty != null" >
        difficulty,
      </if>
      <if test="accepted != null" >
        accepted,
      </if>
      <if test="solved != null" >
        solved,
      </if>
      <if test="submit != null" >
        submit,
      </if>
      <if test="submitUser != null" >
        submit_user,
      </if>
      <if test="authorId != null" >
        author_id,
      </if>
      <if test="contestId != null" >
        contest_id,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
      <if test="modifydate != null" >
        modifydate,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="input != null" >
        input,
      </if>
      <if test="output != null" >
        output,
      </if>
      <if test="sampleInput != null" >
        sample_input,
      </if>
      <if test="sampleOutput != null" >
        sample_output,
      </if>
      <if test="hit != null" >
        hit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null" >
        #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="catelog != null" >
        #{catelog,jdbcType=TINYINT},
      </if>
      <if test="stage != null" >
        #{stage,jdbcType=TINYINT},
      </if>
      <if test="spj != null" >
        #{spj,jdbcType=TINYINT},
      </if>
      <if test="timeLimit != null" >
        #{timeLimit,jdbcType=INTEGER},
      </if>
      <if test="memoryLimit != null" >
        #{memoryLimit,jdbcType=INTEGER},
      </if>
      <if test="difficulty != null" >
        #{difficulty,jdbcType=TINYINT},
      </if>
      <if test="accepted != null" >
        #{accepted,jdbcType=INTEGER},
      </if>
      <if test="solved != null" >
        #{solved,jdbcType=INTEGER},
      </if>
      <if test="submit != null" >
        #{submit,jdbcType=INTEGER},
      </if>
      <if test="submitUser != null" >
        #{submitUser,jdbcType=INTEGER},
      </if>
      <if test="authorId != null" >
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="contestId != null" >
        #{contestId,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifydate != null" >
        #{modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="input != null" >
        #{input,jdbcType=LONGVARCHAR},
      </if>
      <if test="output != null" >
        #{output,jdbcType=LONGVARCHAR},
      </if>
      <if test="sampleInput != null" >
        #{sampleInput,jdbcType=LONGVARCHAR},
      </if>
      <if test="sampleOutput != null" >
        #{sampleOutput,jdbcType=LONGVARCHAR},
      </if>
      <if test="hit != null" >
        #{hit,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.aust.common.entity.ProblemWithBLOBs" >
    update problem
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null" >
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="catelog != null" >
        catelog = #{catelog,jdbcType=TINYINT},
      </if>
      <if test="stage != null" >
        stage = #{stage,jdbcType=TINYINT},
      </if>
      <if test="spj != null" >
        spj = #{spj,jdbcType=TINYINT},
      </if>
      <if test="timeLimit != null" >
        time_limit = #{timeLimit,jdbcType=INTEGER},
      </if>
      <if test="memoryLimit != null" >
        memory_limit = #{memoryLimit,jdbcType=INTEGER},
      </if>
      <if test="difficulty != null" >
        difficulty = #{difficulty,jdbcType=TINYINT},
      </if>
      <if test="accepted != null" >
        accepted = #{accepted,jdbcType=INTEGER},
      </if>
      <if test="solved != null" >
        solved = #{solved,jdbcType=INTEGER},
      </if>
      <if test="submit != null" >
        submit = #{submit,jdbcType=INTEGER},
      </if>
      <if test="submitUser != null" >
        submit_user = #{submitUser,jdbcType=INTEGER},
      </if>
      <if test="authorId != null" >
        author_id = #{authorId,jdbcType=INTEGER},
      </if>
      <if test="contestId != null" >
        contest_id = #{contestId,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifydate != null" >
        modifydate = #{modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="input != null" >
        input = #{input,jdbcType=LONGVARCHAR},
      </if>
      <if test="output != null" >
        output = #{output,jdbcType=LONGVARCHAR},
      </if>
      <if test="sampleInput != null" >
        sample_input = #{sampleInput,jdbcType=LONGVARCHAR},
      </if>
      <if test="sampleOutput != null" >
        sample_output = #{sampleOutput,jdbcType=LONGVARCHAR},
      </if>
      <if test="hit != null" >
        hit = #{hit,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.aust.common.entity.ProblemWithBLOBs" >
    update problem
    set title = #{title,jdbcType=VARCHAR},
    keyword = #{keyword,jdbcType=VARCHAR},
    catelog = #{catelog,jdbcType=TINYINT},
    stage = #{stage,jdbcType=TINYINT},
    spj = #{spj,jdbcType=TINYINT},
    time_limit = #{timeLimit,jdbcType=INTEGER},
    memory_limit = #{memoryLimit,jdbcType=INTEGER},
    difficulty = #{difficulty,jdbcType=TINYINT},
    accepted = #{accepted,jdbcType=INTEGER},
    solved = #{solved,jdbcType=INTEGER},
    submit = #{submit,jdbcType=INTEGER},
    submit_user = #{submitUser,jdbcType=INTEGER},
    author_id = #{authorId,jdbcType=INTEGER},
    contest_id = #{contestId,jdbcType=INTEGER},
    createdate = #{createdate,jdbcType=TIMESTAMP},
    modifydate = #{modifydate,jdbcType=TIMESTAMP},
    description = #{description,jdbcType=LONGVARCHAR},
    input = #{input,jdbcType=LONGVARCHAR},
    output = #{output,jdbcType=LONGVARCHAR},
    sample_input = #{sampleInput,jdbcType=LONGVARCHAR},
    sample_output = #{sampleOutput,jdbcType=LONGVARCHAR},
    hit = #{hit,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.aust.common.entity.Problem" >
    update problem
    set title = #{title,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR},
      catelog = #{catelog,jdbcType=TINYINT},
      stage = #{stage,jdbcType=TINYINT},
      spj = #{spj,jdbcType=TINYINT},
      time_limit = #{timeLimit,jdbcType=INTEGER},
      memory_limit = #{memoryLimit,jdbcType=INTEGER},
      difficulty = #{difficulty,jdbcType=TINYINT},
      accepted = #{accepted,jdbcType=INTEGER},
      solved = #{solved,jdbcType=INTEGER},
      submit = #{submit,jdbcType=INTEGER},
      submit_user = #{submitUser,jdbcType=INTEGER},
      author_id = #{authorId,jdbcType=INTEGER},
      contest_id = #{contestId,jdbcType=INTEGER},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      modifydate = #{modifydate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--关联User的Map查询-->
  <resultMap id="problemUser" type="cn.edu.aust.common.entity.pojo.ProblemUser" extends="BaseResultMap">
    <association property="user" column="author_id" select="cn.edu.aust.common.mapper.UserMapper.selectBaseByPk"/>
  </resultMap>
  <!--关联User的Map查询详细字段-->
  <resultMap id="problemBlobSUser" type="cn.edu.aust.common.entity.pojo.ProblemUser" extends="ResultMapWithBLOBs">
    <association property="user" column="author_id" select="cn.edu.aust.common.mapper.UserMapper.selectBaseByPk"/>
  </resultMap>

  <!--查询一些基础小字段-->
  <select id="selectBaseByPk" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from problem
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!--关联查询题目详情和用户-->
  <select id="selectProblemBlobUserByPk" parameterType="java.lang.Integer" resultMap="problemBlobSUser">
        SELECT * FROM problem WHERE id=#{id,jdbcType=INTEGER}
  </select>


  <!--按照条件查询题目,不包含具体内容,分页排序交给插件执行-->
  <select id="selectWithPageRequest" parameterType="cn.edu.aust.common.util.PageRequest" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/>
    FROM problem p
    <where>
      <include refid="BasicMapper.buildPageRequest"/>
      <if test="search!= null">
        and (p.id LIKE #{search} or p.title LIKE #{search} or p.keyword LIKE #{search})
      </if>
    </where>
  </select>
  <!--根据查询参数动态查询-->
  <select id="selectParam" resultMap="ResultMapWithBLOBs" parameterType="cn.edu.aust.common.mybatis.QueryParams">
    select * from problem p
    <where>
      <include refid="BasicMapper.buildParam"/>
    </where>
  </select>
</mapper>