<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.aust.common.mapper.VoteLogMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.aust.common.entity.VoteLog" >
      <id property="id" column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <result property="userId" column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <result property="type" column="type" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <result property="otherId" column="other_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <result property="status" column="status" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <result property="createtime" column="createtime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, type, other_id, status, createtime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from votelog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from votelog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.aust.common.entity.VoteLog" >
    insert into votelog (id, user_id, type, 
      other_id, status, createtime
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, 
      #{otherId,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{createtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="cn.edu.aust.common.entity.VoteLog" >
    insert into votelog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="otherId != null" >
        other_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="otherId != null" >
        #{otherId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.aust.common.entity.VoteLog" >
    update votelog
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="otherId != null" >
        other_id = #{otherId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.aust.common.entity.VoteLog" >
    update votelog
    set user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      other_id = #{otherId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--根据类型,id,用户id查找用户的点赞-->
  <select id="selectByType" resultMap="BaseResultMap">
      SELECT * FROM votelog WHERE votelog.type = #{type} AND other_id = #{other_id} AND user_id = #{user_id}
  </select>
</mapper>